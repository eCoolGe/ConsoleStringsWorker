using System.Text.RegularExpressions;
using static System.Console;

namespace KursovayaRabota
{
    internal class RegexClass
    {
        public static void FindRegex()
        {
            WriteLine("============================================================================");
            WriteLine("===| Задача: Найти слова в строке по регулярному выражению              |===");
            WriteLine("============================================================================");
            WriteLine("===| Некоторые элементы синтаксиса регулярных выражений:                |===");
            WriteLine("===| .: знак точки определяет любой одиночный символ                    |===");
            WriteLine("===| *: предыдущий символ повторяется 0 и более раз                     |===");
            WriteLine("===| +: предыдущий символ повторяется 1 и более раз                     |===");
            WriteLine("===| ?: предыдущий символ повторяется 0 или 1 раз                       |===");
            WriteLine("===| \\s: соответствует любому пробельному символу                       |===");
            WriteLine("===| \\S: соответствует любому символу, не являющемуся пробелом          |===");
            WriteLine("===| \\w: соответствует любому алфавитно - цифровому символу             |===");
            WriteLine("===| \\W: соответствует любому не алфавитно-цифровому символу            |===");
            WriteLine("===| \\d: соответствует любой десятичной цифре                           |===");
            WriteLine("===| \\D: соответствует любому символу, не являющемуся десятичной цифрой |===");
            WriteLine("============================================================================");

            Write("===| Введите строку: "); string s = Program.IfStringNull(ReadLine());
            Write("===| Введите регулярное выражение: "); string pattern = Program.IfStringNull(ReadLine());

            Regex regex = new Regex(pattern);
            MatchCollection matches = regex.Matches(s);
            if (matches.Count > 0)
            {
                WriteLine("===| Вывод: ");
                foreach (Match match in matches)
                    WriteLine(match.Value);
            }
            else
            {
                WriteLine("===| Совпадений не найдено :c");
            }
        }
        public static void ReplaceRegex()
        {
            WriteLine("============================================================================");
            WriteLine("===| Задача: Замена строки по регулярному выражению на другую           |===");
            WriteLine("============================================================================");
            WriteLine("===| Некоторые элементы синтаксиса регулярных выражений:                |===");
            WriteLine("===| .: знак точки определяет любой одиночный символ                    |===");
            WriteLine("===| *: предыдущий символ повторяется 0 и более раз                     |===");
            WriteLine("===| +: предыдущий символ повторяется 1 и более раз                     |===");
            WriteLine("===| ?: предыдущий символ повторяется 0 или 1 раз                       |===");
            WriteLine("===| \\s: соответствует любому пробельному символу                       |===");
            WriteLine("===| \\S: соответствует любому символу, не являющемуся пробелом          |===");
            WriteLine("===| \\w: соответствует любому алфавитно - цифровому символу             |===");
            WriteLine("===| \\W: соответствует любому не алфавитно-цифровому символу            |===");
            WriteLine("===| \\d: соответствует любой десятичной цифре                           |===");
            WriteLine("===| \\D: соответствует любому символу, не являющемуся десятичной цифрой |===");
            WriteLine("============================================================================");

            Write("===| Введите строку: "); string s = Program.IfStringNull(ReadLine());
            Write("===| Введите регулярное выражение: "); string pattern = Program.IfStringNull(ReadLine());
            Write("===| Замена на: (для простого удаления - оставьте пустым)"); string target = ReadLine();


            Regex regex = new Regex(pattern);
            string result = regex.Replace(s, target);
            Console.WriteLine(result);
        }
    }
}
